<template>
    <component
		:is="itemLayout"
		class="[thing]"
		:id="model.id"
		:deleting="deleting"
		:updating="updating"
		:toggles="toggles"
		:externalUrl="url"
		:item-border="itemBorder"
		:meta="meta"
		@view="view"
		@update="update"
		@ToggledHasChanged="$emit('ToggledHasChanged')"
	>

        <template slot="menu">
			<!--
			<dropdown-item :show="toggles.trello" :busy="busy" @clicked="trello" icon="fa-trello">
				Send To Trello
				<i v-if="trellod || trelloing" class="fa fa-fw ml-2"
				   :class="trellod ? ['fa-check-square-o','text-success'] : ['fa-circle-o-notch','fa-spin']">
				</i>
			</dropdown-item>
			-->
		</template>


		<template slot="row2">
			<!-- -->
		</template>

    </component>
</template>

<script>
    export default {
        mixins : [
            mixins.item
        ],

        computed : {
        	meta() {

				return [
					/*{
						key: 'assignee',
						badge: this.absent,
						badge_class: 'badge-danger'
					},*/
					'name',
					'description',
				]
			},
        },

        data() {
            return {
            	component_type : "item-table",

                item : {
                    key : 'id',
                    type : '[thing]',
                    endpoint : '[url_prefix][things]',
                    channel : `[things].${this.initial.id}`,
                    updated : '[Thing]WasUpdated',
                },

                toggles : {
                    info : false,
                    update : true,
                    delete : false,
                }
            }
        },

        methods : {
            postUpdated(event) {
                this.updating = false;
            },

            update() {
                Bus.$emit('ShowForm', { type : '[thing]', model : this.initial })
            },
        }
    }
</script>